/*
 * IdentityExpress Management API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.nanthealth.identityexpress.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nanthealth.identityexpress.api.client.model.CreateSecretDto;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateClientDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-24T03:48:05.487Z")
public class CreateClientDto {
  /**
   * Gets or Sets clientType
   */
  @JsonAdapter(ClientTypeEnum.Adapter.class)
  public enum ClientTypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    ClientTypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ClientTypeEnum fromValue(String text) {
      for (ClientTypeEnum b : ClientTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ClientTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ClientTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ClientTypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value = jsonReader.nextInt();
        return ClientTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("clientType")
  private ClientTypeEnum clientType = null;

  @SerializedName("clientId")
  private String clientId = null;

  @SerializedName("clientName")
  private String clientName = null;

  @SerializedName("clientUri")
  private String clientUri = null;

  @SerializedName("logoUri")
  private String logoUri = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("requireConsent")
  private Boolean requireConsent = null;

  @SerializedName("redirectUris")
  private List<String> redirectUris = null;

  @SerializedName("postLogoutRedirectUris")
  private List<String> postLogoutRedirectUris = null;

  @SerializedName("allowedScopes")
  private List<String> allowedScopes = null;

  @SerializedName("allowedCorsOrigins")
  private List<String> allowedCorsOrigins = null;

  @SerializedName("clientSecrets")
  private List<CreateSecretDto> clientSecrets = null;

  public CreateClientDto clientType(ClientTypeEnum clientType) {
    this.clientType = clientType;
    return this;
  }

   /**
   * Get clientType
   * @return clientType
  **/
  @ApiModelProperty(value = "")
  public ClientTypeEnum getClientType() {
    return clientType;
  }

  public void setClientType(ClientTypeEnum clientType) {
    this.clientType = clientType;
  }

  public CreateClientDto clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @ApiModelProperty(value = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public CreateClientDto clientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

   /**
   * Get clientName
   * @return clientName
  **/
  @ApiModelProperty(value = "")
  public String getClientName() {
    return clientName;
  }

  public void setClientName(String clientName) {
    this.clientName = clientName;
  }

  public CreateClientDto clientUri(String clientUri) {
    this.clientUri = clientUri;
    return this;
  }

   /**
   * Get clientUri
   * @return clientUri
  **/
  @ApiModelProperty(value = "")
  public String getClientUri() {
    return clientUri;
  }

  public void setClientUri(String clientUri) {
    this.clientUri = clientUri;
  }

  public CreateClientDto logoUri(String logoUri) {
    this.logoUri = logoUri;
    return this;
  }

   /**
   * Get logoUri
   * @return logoUri
  **/
  @ApiModelProperty(value = "")
  public String getLogoUri() {
    return logoUri;
  }

  public void setLogoUri(String logoUri) {
    this.logoUri = logoUri;
  }

  public CreateClientDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateClientDto requireConsent(Boolean requireConsent) {
    this.requireConsent = requireConsent;
    return this;
  }

   /**
   * Get requireConsent
   * @return requireConsent
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequireConsent() {
    return requireConsent;
  }

  public void setRequireConsent(Boolean requireConsent) {
    this.requireConsent = requireConsent;
  }

  public CreateClientDto redirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
    return this;
  }

  public CreateClientDto addRedirectUrisItem(String redirectUrisItem) {
    if (this.redirectUris == null) {
      this.redirectUris = new ArrayList<String>();
    }
    this.redirectUris.add(redirectUrisItem);
    return this;
  }

   /**
   * Get redirectUris
   * @return redirectUris
  **/
  @ApiModelProperty(value = "")
  public List<String> getRedirectUris() {
    return redirectUris;
  }

  public void setRedirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
  }

  public CreateClientDto postLogoutRedirectUris(List<String> postLogoutRedirectUris) {
    this.postLogoutRedirectUris = postLogoutRedirectUris;
    return this;
  }

  public CreateClientDto addPostLogoutRedirectUrisItem(String postLogoutRedirectUrisItem) {
    if (this.postLogoutRedirectUris == null) {
      this.postLogoutRedirectUris = new ArrayList<String>();
    }
    this.postLogoutRedirectUris.add(postLogoutRedirectUrisItem);
    return this;
  }

   /**
   * Get postLogoutRedirectUris
   * @return postLogoutRedirectUris
  **/
  @ApiModelProperty(value = "")
  public List<String> getPostLogoutRedirectUris() {
    return postLogoutRedirectUris;
  }

  public void setPostLogoutRedirectUris(List<String> postLogoutRedirectUris) {
    this.postLogoutRedirectUris = postLogoutRedirectUris;
  }

  public CreateClientDto allowedScopes(List<String> allowedScopes) {
    this.allowedScopes = allowedScopes;
    return this;
  }

  public CreateClientDto addAllowedScopesItem(String allowedScopesItem) {
    if (this.allowedScopes == null) {
      this.allowedScopes = new ArrayList<String>();
    }
    this.allowedScopes.add(allowedScopesItem);
    return this;
  }

   /**
   * Get allowedScopes
   * @return allowedScopes
  **/
  @ApiModelProperty(value = "")
  public List<String> getAllowedScopes() {
    return allowedScopes;
  }

  public void setAllowedScopes(List<String> allowedScopes) {
    this.allowedScopes = allowedScopes;
  }

  public CreateClientDto allowedCorsOrigins(List<String> allowedCorsOrigins) {
    this.allowedCorsOrigins = allowedCorsOrigins;
    return this;
  }

  public CreateClientDto addAllowedCorsOriginsItem(String allowedCorsOriginsItem) {
    if (this.allowedCorsOrigins == null) {
      this.allowedCorsOrigins = new ArrayList<String>();
    }
    this.allowedCorsOrigins.add(allowedCorsOriginsItem);
    return this;
  }

   /**
   * Get allowedCorsOrigins
   * @return allowedCorsOrigins
  **/
  @ApiModelProperty(value = "")
  public List<String> getAllowedCorsOrigins() {
    return allowedCorsOrigins;
  }

  public void setAllowedCorsOrigins(List<String> allowedCorsOrigins) {
    this.allowedCorsOrigins = allowedCorsOrigins;
  }

  public CreateClientDto clientSecrets(List<CreateSecretDto> clientSecrets) {
    this.clientSecrets = clientSecrets;
    return this;
  }

  public CreateClientDto addClientSecretsItem(CreateSecretDto clientSecretsItem) {
    if (this.clientSecrets == null) {
      this.clientSecrets = new ArrayList<CreateSecretDto>();
    }
    this.clientSecrets.add(clientSecretsItem);
    return this;
  }

   /**
   * Get clientSecrets
   * @return clientSecrets
  **/
  @ApiModelProperty(value = "")
  public List<CreateSecretDto> getClientSecrets() {
    return clientSecrets;
  }

  public void setClientSecrets(List<CreateSecretDto> clientSecrets) {
    this.clientSecrets = clientSecrets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateClientDto createClientDto = (CreateClientDto) o;
    return Objects.equals(this.clientType, createClientDto.clientType) &&
        Objects.equals(this.clientId, createClientDto.clientId) &&
        Objects.equals(this.clientName, createClientDto.clientName) &&
        Objects.equals(this.clientUri, createClientDto.clientUri) &&
        Objects.equals(this.logoUri, createClientDto.logoUri) &&
        Objects.equals(this.description, createClientDto.description) &&
        Objects.equals(this.requireConsent, createClientDto.requireConsent) &&
        Objects.equals(this.redirectUris, createClientDto.redirectUris) &&
        Objects.equals(this.postLogoutRedirectUris, createClientDto.postLogoutRedirectUris) &&
        Objects.equals(this.allowedScopes, createClientDto.allowedScopes) &&
        Objects.equals(this.allowedCorsOrigins, createClientDto.allowedCorsOrigins) &&
        Objects.equals(this.clientSecrets, createClientDto.clientSecrets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientType, clientId, clientName, clientUri, logoUri, description, requireConsent, redirectUris, postLogoutRedirectUris, allowedScopes, allowedCorsOrigins, clientSecrets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateClientDto {\n");
    
    sb.append("    clientType: ").append(toIndentedString(clientType)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    clientUri: ").append(toIndentedString(clientUri)).append("\n");
    sb.append("    logoUri: ").append(toIndentedString(logoUri)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    requireConsent: ").append(toIndentedString(requireConsent)).append("\n");
    sb.append("    redirectUris: ").append(toIndentedString(redirectUris)).append("\n");
    sb.append("    postLogoutRedirectUris: ").append(toIndentedString(postLogoutRedirectUris)).append("\n");
    sb.append("    allowedScopes: ").append(toIndentedString(allowedScopes)).append("\n");
    sb.append("    allowedCorsOrigins: ").append(toIndentedString(allowedCorsOrigins)).append("\n");
    sb.append("    clientSecrets: ").append(toIndentedString(clientSecrets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


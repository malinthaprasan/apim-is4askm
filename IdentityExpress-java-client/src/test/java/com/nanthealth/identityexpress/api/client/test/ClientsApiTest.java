/*
 * IdentityExpress Management API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.nanthealth.identityexpress.api.client.test;

import org.junit.Test;

import com.nanthealth.identityexpress.api.client.ApiException;
import com.nanthealth.identityexpress.api.client.api.ClientsApi;
import com.nanthealth.identityexpress.api.client.model.ClientDto;
import com.nanthealth.identityexpress.api.client.model.CreateClientDto;
import com.nanthealth.identityexpress.api.client.model.CreateSecretDto;
import com.nanthealth.identityexpress.api.client.model.SecretDto;

import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClientsApi
 */
@Ignore
public class ClientsApiTest {

    private final ClientsApi api = new ClientsApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsByIdDeleteTest() throws ApiException {
        String id = null;
        api.clientsByIdDelete(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsByIdGetTest() throws ApiException {
        api.clientsByIdGet("0b0bfcea-79d4-4281-9392-29d228211d4b");

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsByIdPutTest() throws ApiException {
        String id = null;
        ClientDto client = null;
        api.clientsByIdPut(id, client);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsByIdSecretsBySecretIdDeleteTest() throws ApiException {
        String id = null;
        Integer secretId = null;
        api.clientsByIdSecretsBySecretIdDelete(id, secretId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsByIdSecretsBySecretIdPutTest() throws ApiException {
        String id = null;
        Integer secretId = null;
        SecretDto secret = null;
        api.clientsByIdSecretsBySecretIdPut(id, secretId, secret);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsByIdSecretsPostTest() throws ApiException {
        String id = null;
        CreateSecretDto secret = null;
        api.clientsByIdSecretsPost(id, secret);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsGetTest() throws ApiException {
        api.clientsGet(null);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsPostTest() throws ApiException {
        CreateClientDto client = new CreateClientDto();
        
        client.clientName("test-client");
        client.setClientId("1234567");
        client.setClientType(CreateClientDto.ClientTypeEnum.NUMBER_1);
        
        List<CreateSecretDto> secretDtos = new ArrayList<>();
        CreateSecretDto secretDto = new CreateSecretDto();
        secretDto.setType("Shared Secret");
        secretDtos.add(secretDto);
        client.setClientSecrets(secretDtos);
        client.setRedirectUris(new ArrayList<String>() {{
            add("http://localhost/sample");
        }});
        
        api.clientsPost(client);
    }
    
}
